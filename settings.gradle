pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.minecraftforge.net/' }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.7.0'
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            plugin('extra-module', 'org.gradlex.extra-java-module-info').version('1.4.2')
            plugin('license',      'net.minecraftforge.licenser'       ).version('1.0.1')
            plugin('gradleutils',  'net.minecraftforge.gradleutils'    ).version('[2.3.0,2.4)')
            plugin('eclipse-apt',  'com.diffplug.eclipse.apt'          ).version('3.43.0')
            plugin('signer',       'net.minecraftforge.gradlejarsigner').version('1.0.5')

            version('asm', '9.7.1')
            library('asm',         'org.ow2.asm', 'asm'        ).versionRef('asm')
            library('asm-tree',    'org.ow2.asm', 'asm-tree'   ).versionRef('asm')
            library('asm-commons', 'org.ow2.asm', 'asm-commons').versionRef('asm')
            bundle('asm', ['asm', 'asm-tree', 'asm-commons'])

            version('junit', '5.10.0')
            library('junit-api',      'org.junit.jupiter',  'junit-jupiter-api'      ).versionRef('junit')
            library('junit-engine',   'org.junit.jupiter',  'junit-jupiter-engine'   ).versionRef('junit')
            library('junit-platform', 'org.junit.platform', 'junit-platform-launcher').version('1.10.0')
            bundle('junit-runtime', ['junit-engine', 'junit-platform'])

            version('bootstrap', '2.1.1')
            library('bootstrap',     'net.minecraftforge', 'bootstrap'    ).versionRef('bootstrap')
            library('bootstrap-api', 'net.minecraftforge', 'bootstrap-api').versionRef('bootstrap')
            bundle('bootstrap', ['bootstrap', 'bootstrap-api'])

            library('unsafe', 'net.minecraftforge:unsafe:0.9.2')

            version('jmh', '1.35')
            library('jmh-core', 'org.openjdk.jmh', 'jmh-core'                ).versionRef('jmh')
            library('jmh-ap',   'org.openjdk.jmh', 'jmh-generator-annprocess').versionRef('jmh')

            // groovy and ivy should match the version gradle ships, but it gets weird
            library('ivy',    'org.apache.ivy:ivy:2.4.0')
            library('groovy', 'org.codehaus.groovy:groovy-all:3.0.19')
        }
    }
}

rootProject.name = 'SecureModules'
include 'sm-jmh'
include 'sm-test'
include 'sm-test-data'
include 'sm-test-data-java9'